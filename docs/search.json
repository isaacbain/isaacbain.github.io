[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "3D population density mapping\n\n\n\n\n\n\ncode\n\n\npopulation\n\n\nmaps\n\n\n\n\n\n\n\n\n\nJul 4, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\n\n\n\n\n\n\nMap of South Island remote huts\n\n\n\n\n\n\ncode\n\n\nmaps\n\n\noutdoors\n\n\n\n\n\n\n\n\n\nJul 2, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\n\n\n\n\n\n\nExploring the Estimated Resident Population Grid\n\n\n\n\n\n\ncode\n\n\npopulation\n\n\nmaps\n\n\n\n\n\n\n\n\n\nJun 25, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\n\n\n\n\n\n\nKoordinates API for R\n\n\n\n\n\n\ncode\n\n\nclimate\n\n\nanimation\n\n\n\n\n\n\n\n\n\nJun 18, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\n\n\n\n\n\n\nEarthquakes animation\n\n\n\n\n\n\ncode\n\n\ngeophysics\n\n\nmaps\n\n\nanimation\n\n\n\n\n\n\n\n\n\nJun 10, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\n\n\n\n\n\n\nLakes small multiples\n\n\n\n\n\n\ncode\n\n\nwater quality\n\n\nmaps\n\n\n\n\n\n\n\n\n\nJun 6, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\n\n\n\n\n\n\nArrowtown air quality\n\n\n\n\n\n\ncode\n\n\nair quality\n\n\nanimation\n\n\n\n\n\n\n\n\n\nJun 2, 2024\n\n\nIsaac Bain\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#welcome-to-my-personal-website.",
    "href": "index.html#welcome-to-my-personal-website.",
    "title": "Kia ora üëã",
    "section": "Welcome to my personal website.",
    "text": "Welcome to my personal website.\nThis is where I share my projects, maps, graphs, and code that I‚Äôve been tinkering with. You‚Äôll hopefully find some interesting content here about environmental data, freshwater ecology, and public health.\nPlease remember, nothing here represents the views of my employer‚Äîit‚Äôs all just my personal work and thoughts. My goal is to make complex data more accessible and even a bit fun. I aim to provide insights and provoke thought rather than deliver definitive conclusions.\nI hope you find something intriguing and valuable on my site. Feel free to reach out with any questions or comments.\nNgƒÅ mihi,\nIsaac Bain"
  },
  {
    "objectID": "posts/remote-huts/index.html",
    "href": "posts/remote-huts/index.html",
    "title": "Map of South Island remote huts",
    "section": "",
    "text": "The Permolat Trust maintains a unique and iconic network of around 70 remote back-country huts and bivouacs in Central Westland. Before the Trust took on their care, these huts were in a dilapidated state and under threat of disappearing due to lack of use and funding. The primary reason for their disuse was the difficulty in accessing them and obtaining up-to-date route information.\nThese huts differ from the typical serviced DOC huts. They are all very small (typically 1 to 4 bunks), have long, challenging approaches, and are maintained by volunteer labour. Unlike the more accessible DOC huts, these remote huts offer a truly authentic and rugged back-country experience. They are nestled in some of the most untouched and pristine environments, requiring a good level of fitness, navigation skills, and a sense of adventure to reach.\nThe Trust relies heavily on the dedication and hard work of volunteers, who invest countless hours in maintaining and restoring these huts. Their efforts ensure that these historic and culturally significant structures are preserved for future generations to explore and enjoy.\nHere‚Äôs just a couple of my favourites:\n\n\n\n\n\n\n \n\nDickie Spur Hut - Rob Brown\n\n\n\n\n \n\nMungo Hut - Rob Brown\n\n\n\n\n\n\n \n\nPfeifer Biv - Andrew Buglass\n\n\n\n\n \n\nPinnacle Biv - Geoff Spearpoint"
  },
  {
    "objectID": "posts/remote-huts/index.html#overview",
    "href": "posts/remote-huts/index.html#overview",
    "title": "Map of South Island remote huts",
    "section": "",
    "text": "The Permolat Trust maintains a unique and iconic network of around 70 remote back-country huts and bivouacs in Central Westland. Before the Trust took on their care, these huts were in a dilapidated state and under threat of disappearing due to lack of use and funding. The primary reason for their disuse was the difficulty in accessing them and obtaining up-to-date route information.\nThese huts differ from the typical serviced DOC huts. They are all very small (typically 1 to 4 bunks), have long, challenging approaches, and are maintained by volunteer labour. Unlike the more accessible DOC huts, these remote huts offer a truly authentic and rugged back-country experience. They are nestled in some of the most untouched and pristine environments, requiring a good level of fitness, navigation skills, and a sense of adventure to reach.\nThe Trust relies heavily on the dedication and hard work of volunteers, who invest countless hours in maintaining and restoring these huts. Their efforts ensure that these historic and culturally significant structures are preserved for future generations to explore and enjoy.\nHere‚Äôs just a couple of my favourites:\n\n\n\n\n\n\n \n\nDickie Spur Hut - Rob Brown\n\n\n\n\n \n\nMungo Hut - Rob Brown\n\n\n\n\n\n\n \n\nPfeifer Biv - Andrew Buglass\n\n\n\n\n \n\nPinnacle Biv - Geoff Spearpoint"
  },
  {
    "objectID": "posts/remote-huts/index.html#data-sources",
    "href": "posts/remote-huts/index.html#data-sources",
    "title": "Map of South Island remote huts",
    "section": "2 Data sources",
    "text": "2 Data sources\nThe Permolat Trust has created the Remote Huts website which is a fantastic resource for obtaining key details about each of their huts. Each individual hut page features a topographic map showing the hut and its surrounds, like so:\n\n  \n\n\nHowever, the site lacked an overview map displaying the relative location of all their huts - which would be useful for trip planning and discovering new huts to visit. After confirming with their webmaster they did not have a database of their hut listings, I scraped all the necessary data into a Google Sheet, from which my map is drawn. Using a Google Sheet is a good idea from a technical perspective because it allows for easy data manipulation, integration with various mapping and visualisation tools, and real-time collaboration and updates.\n\n\nShow libraries code\nlibrary(tidyverse)\nlibrary(googlesheets4)\nlibrary(mapview)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(htmltools)\nlibrary(ggmap)\n\n\n\n\nShow data import code\ngs4_deauth()\n\ndf &lt;- read_sheet(\"https://docs.google.com/spreadsheets/d/1bh7kHtU--3jA8gb02yBaqBhp6PH5mdevNWOjkc41EXg/edit#gid=0\") |&gt;\n  st_as_sf(coords = c(\"X\", \"Y\"), crs = 4326)"
  },
  {
    "objectID": "posts/remote-huts/index.html#mapping",
    "href": "posts/remote-huts/index.html#mapping",
    "title": "Map of South Island remote huts",
    "section": "3 Mapping",
    "text": "3 Mapping\n\n3.1 Static map\nThe static map provides a basic visual overview of the Permolat Trust‚Äôs network of huts across the South Island. Using the ggmap package, a base layer of the South Island was retrieved and plotted with the hut locations overlaid. But the real magic comes next‚Ä¶\n\n\nShow the code\n# bounding box for South Island\nsi &lt;- c(left = 166.25, bottom = -47.5, right = 174.5, top = -40.0)\n\n# retrieve base layer\nmap &lt;- get_stadiamap(si, zoom = 8, maptype = \"stamen_terrain_background\") \n\n# Define a function to fix the bbox to be in EPSG:3857\n# https://stackoverflow.com/questions/47749078/how-to-put-a-geom-sf-produced-map-on-top-of-a-ggmap-produced-raster\nggmap_bbox &lt;- function(map) {\n  if (!inherits(map, \"ggmap\")) stop(\"map must be a ggmap object\")\n  # Extract the bounding box (in lat/lon) from the ggmap to a numeric vector, \n  # and set the names to what sf::st_bbox expects:\n  map_bbox &lt;- setNames(unlist(attr(map, \"bb\")), \n                       c(\"ymin\", \"xmin\", \"ymax\", \"xmax\"))\n\n  # Coonvert the bbox to an sf polygon, transform it to 3857, \n  # and convert back to a bbox (convoluted, but it works)\n  bbox_3857 &lt;- st_bbox(st_transform(st_as_sfc(st_bbox(map_bbox, crs = 4326)), 3857))\n\n  # Overwrite the bbox of the ggmap object with the transformed coordinates \n  attr(map, \"bb\")$ll.lat &lt;- bbox_3857[\"ymin\"]\n  attr(map, \"bb\")$ll.lon &lt;- bbox_3857[\"xmin\"]\n  attr(map, \"bb\")$ur.lat &lt;- bbox_3857[\"ymax\"]\n  attr(map, \"bb\")$ur.lon &lt;- bbox_3857[\"xmax\"]\n  map\n}\n\n# Use the function:\nmap &lt;- ggmap_bbox(map)\n\n# create the static map\nggmap(map) +\n  coord_sf(crs = st_crs(3857)) + # force the ggplot2 map to be in 3857\n  geom_sf(data = df |&gt; st_transform(3857),\n          inherit.aes = FALSE, \n          aes(),\n          color = \"blue\",\n          size = 1.5)\n\n\n\n\n\n\n\n\n\n\n\n3.2 Interactive map\nThe interactive map offers a dynamic way to explore the Permolat Trust‚Äôs huts across the South Island. It includes several user-friendly features:\n\nHover to View Details: Users can hover over any point to see the hut‚Äôs name and a photo, making it easy to identify and learn more about each hut.\nClickable Points: Clicking on any point takes users directly to the Remote Huts website for detailed information about the hut.\nCustomizable Base Maps: Users can switch between different base maps, including terrain, Topographic 1:50k and 1:250k, and satellite views. This functionality, available via a control in the upper right corner, allows users to choose the most useful map type for their needs.\n\nThe interactive map is created using the leaflet package, which provides powerful tools for building interactive maps. Here‚Äôs a breakdown of the key steps:\n\nPopup Content: The hover popups display the hut‚Äôs name and image, generated using HTML content.\nClick Event: JavaScript is used to add click events to each point, linking to the corresponding hut page on the Remote Huts website.\nBase Layers: Various base map layers are added using addProviderTiles and addTiles, giving users multiple perspectives of the terrain.\n\n\n\nShow the code\n# column: screen-inset-shaded\n\n# create hover popup spec\ncontent &lt;- paste0(\"&lt;div style='text-align: center;'&gt;&lt;b&gt;\", df$Name, \"&lt;/b&gt;&lt;/div&gt;\", \"&lt;img src = '\", df$Image, \"', width = '175'&gt;\")\n\n# goto url on click\njsCode &lt;- paste0('\n function(el, x, data) {\n  var markers = document.getElementsByClassName(\"leaflet-interactive\");\n  for(var i = 0; i &lt; markers.length; i++){\n    (function(){\n      var v = data.URL[i];\n      markers[i].addEventListener(\"click\", function() { window.open(v); }, false);\n    }()); \n  }\n }\n')\n\n# setup xyz tiles\ntopo50_tiles &lt;- paste0(\n  \"https://tiles-cdn.koordinates.com/services;key=\", Sys.getenv(\"koordinates_tile_api\"), \"/tiles/v4/layer=50767/EPSG:3857/{z}/{x}/{y}.png\"\n  )\n\ntopo250_tiles &lt;- paste0(\n  \"https://tiles-cdn.koordinates.com/services;key=\", Sys.getenv(\"koordinates_tile_api\"), \"/tiles/v4/layer=50798/EPSG:3857/{z}/{x}/{y}.png\"\n)\n\n# create leaflet map\nmap &lt;- \n  leaflet(df) %&gt;%\n  addMapPane(name = \"circles\", zIndex = 410) %&gt;%\n  addCircleMarkers(\n    color = \"black\",\n    fillColor = \"blue\",\n    radius = 5,\n    fillOpacity = 0.75, \n    stroke = T, \n    weight = 1,\n    opacity = 1,\n    label = lapply(content, htmltools::HTML),\n  ) %&gt;%\n  addProviderTiles(providers$CartoDB.Voyager, group = \"Terrain\") %&gt;%\n  addTiles(topo50_tiles, group = \"Topo50\") %&gt;%\n  addTiles(topo250_tiles, group = \"Topo250\") %&gt;%\n  addProviderTiles(providers$Esri.WorldImagery, group = \"Satellite\") %&gt;%\n  addLayersControl(\n    baseGroups = c(\"Terrain\", \"Topo250\", \"Topo50\", \"Satellite\"),\n    options = layersControlOptions(collapsed = FALSE)\n  ) %&gt;%\n  htmlwidgets::onRender(jsCode, data = df) \n\nmap"
  },
  {
    "objectID": "posts/remote-huts/index.html#conclusion",
    "href": "posts/remote-huts/index.html#conclusion",
    "title": "Map of South Island remote huts",
    "section": "4 Conclusion",
    "text": "4 Conclusion\nExploring potential remote huts to visit is now much easier than ever before, with the overview map of the South Island. This same map is also available directly via the Remote Huts website, allowing users to explore by A-Z, by river catchment, and now by map!\nThis is a great result for backcountry users and the Permolat Trust, which now has a web-map integrated into their existing website infrastructure at zero cost.\nWhich one do you plan on visiting?"
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html",
    "href": "posts/arrowtown-air-quality/index.html",
    "title": "Arrowtown air quality",
    "section": "",
    "text": "Most of the time, New Zealand enjoys good air quality, allowing us to step outside and breathe a breath of fresh air, knowing it‚Äôs safe. However at certain times and places, our air is polluted to such levels that it causes us harm, or in the worst cases, premature death. Here I access air quality data from LAWA and explore it for one site known for severe winter air pollution."
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#libraries",
    "href": "posts/arrowtown-air-quality/index.html#libraries",
    "title": "Arrowtown air quality",
    "section": "1 Libraries",
    "text": "1 Libraries\n\n\nShow the code\nlibrary(tidyverse) # provides ggplot, dplyr, etc\nlibrary(janitor) # tidy up messy variable names\nlibrary(gganimate) # provides animations\nlibrary(geomtextpath) # makes labels curved on polar graph\nlibrary(leaflet) # for interactive mapping"
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#import-data",
    "href": "posts/arrowtown-air-quality/index.html#import-data",
    "title": "Arrowtown air quality",
    "section": "2 Import data",
    "text": "2 Import data\nLand, Air, Water Aotearoa (LAWA) is a collaboration between New Zealand‚Äôs 16 regional councils and unitary authorities, the Cawthron Institute, the Ministry for the Environment, the Department of Conservation, and Stats NZ. LAWA provides state of the environment monitoring data for various environmental domains, including; swimming water quality, estuary health, groundwater quality, lake quality, land cover, river quality, water quantity, and of particular interest here, air quality.\nLAWA makes their data freely available at https://lawa.org.nz/download-data. From this source I downloaded an Excel sheet of air quality data for the period 2016 to 2022. Currently, the available parameters are PM10 and PM2.5.\nParticulate matter (PM) can have adverse effects on human health and the environment. The numbers 10 and 2.5 refer to the diameter of the particles in micrometers (¬µm).\n\n\n\n\n\n\nWhat are the human health impacts of PM in New Zealand?\n\n\n\n\n\nHales et al.¬†(2021) did a retrospective cohort epidemiological study of the association between PM2.5, NO2 and mortality and morbidity for 2.2m New Zealanders. They found that exposure to PM2.5 per 10 Œºg/m3 increased the risk of death by 11% (95% CI 7-15%) and increased the risk of ischaemic heart disease by 29% (95% CI 23-35%).\nHales, S., Atkinson, J., Metcalfe, J., Kuschel, G., & Woodward, A. (2021). Long term exposure to air pollution, mortality and morbidity in New Zealand: cohort study. Science of The Total Environment, 801, 149660.\n\n\n\n\n\nShow the code\ndat &lt;- readxl::read_xlsx(\"data/airqualitydownloaddata_2016-2022.xlsx\",\n                         sheet = \"Air Quality Data\") |&gt; # read in data\n  clean_names() |&gt; # tidy up messy names\n  mutate(year = year(sample_date)) |&gt; # extract year as a new variable\n  filter(!is.na(sample_date) & !is.na(concentration)) # filter out NAs"
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#what-are-the-worst-sites",
    "href": "posts/arrowtown-air-quality/index.html#what-are-the-worst-sites",
    "title": "Arrowtown air quality",
    "section": "3 What are the worst sites?",
    "text": "3 What are the worst sites?\nAir quality is known to be worst in more southern areas, places where home heating via wood burning or coal is more prevalent, particularly during the colder months of the year.\nBut let‚Äôs check some of these assumptions by extracting the worst 5 sites for highest recorded PM10 values (Table¬†1).\n\n\nShow the code\ndat |&gt; \n  filter(indicator == \"PM10\") |&gt; # just look at PM10\n  group_by(site_name) |&gt; \n  summarize(max_concentration = max(concentration, na.rm = TRUE)) |&gt; # get max conc. per site\n  arrange(desc(max_concentration)) |&gt; # sort descending\n  top_n(5, max_concentration) |&gt; # get top 5 sites\n  knitr::kable()\n\n\n\n\nTable¬†1: Top 5 sites with highest PM10 concentrations\n\n\n\n\n\n\nsite_name\nmax_concentration\n\n\n\n\nMilton\n202.800\n\n\nArrowtown\n157.900\n\n\nLower Hutt (Phil Evans Reserve)\n155.400\n\n\nInvercargill at Pomona Street\n138.980\n\n\nWashdyke Alpine\n123.496\n\n\n\n\n\n\n\n\nIndeed most of these locations are in South Island, with the exception of Lower Hutt, which is at the southern end of the North Island.\n\n\nShow the code\nprocessed_data &lt;- dat %&gt;% \n  filter(indicator == \"PM10\") %&gt;% # just look at PM10\n  group_by(site_name) %&gt;% \n  summarise(\n    max_concentration = max(concentration, na.rm = TRUE), \n    latitude = first(latitude),\n    longitude = first(longitude)\n  ) %&gt;% # get max conc. per site\n  arrange(desc(max_concentration)) %&gt;% # sort descending\n  top_n(5, max_concentration) %&gt;% \n  sf::st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326)\n\n# Create a color palette\npal &lt;- colorNumeric(\n  palette = \"YlOrRd\",\n  domain = processed_data$max_concentration, # Set the domain to the range of max_concentration\n  na.color = \"transparent\",\n  reverse = TRUE\n)\n\n# Create a Leaflet map\nleaflet(processed_data) %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    radius = ~sqrt(max_concentration), # Scale the radius proportional to max_concentration\n    color = ~pal(max_concentration),\n    fillOpacity = 1,\n    stroke = 0,\n    label = ~paste0(site_name, \", \", \"Max PM10: \", max_concentration)\n  ) %&gt;%\n  addLegend(\n    \"bottomright\",\n    pal = pal,\n    values = processed_data$max_concentration, # Pass the actual max_concentration values\n    title = \"Max PM10 Concentration\",\n    opacity = 0.7,\n    labFormat = labelFormat(transform = function(x) sort(x, decreasing = TRUE))\n  )"
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#static-plot-of-seasonal-air-quality",
    "href": "posts/arrowtown-air-quality/index.html#static-plot-of-seasonal-air-quality",
    "title": "Arrowtown air quality",
    "section": "4 Static plot of seasonal air quality",
    "text": "4 Static plot of seasonal air quality\nNow let‚Äôs check the assumption that air quality is worse during the colder months of the year. Here, I plot daily PM10 concentrations over 2022 for one site (Arrowtown) (Figure¬†1). The data shows a significant spike during the winter months, with a number of exceedances of the WHO guideline of 45 ¬µg/m¬≥.\n\n\nShow the code\ndat_filtered &lt;- dat |&gt; \n  filter(site_name == \"Arrowtown\") |&gt; \n  filter(indicator == \"PM10\") |&gt; \n  filter(year == 2022) |&gt;\n  arrange(sample_date) |&gt; \n  mutate(sample_date = as.Date(sample_date))\n\n# Calculate the breaks for y-axis labels\nn_breaks &lt;- 5\nmy_breaks &lt;- scales::breaks_extended(n = n_breaks)(range(dat_filtered$concentration))\nmy_breaks &lt;- my_breaks[my_breaks &gt; 0]\n\n# Create a data frame for the tick marks\ntick_data &lt;- data.frame(\n  x = as.Date(\"2022-01-01\"),\n  xend = as.Date(\"2022-01-03\"),\n  y = my_breaks,\n  yend = my_breaks\n)\n\n# plot\nggplot(dat_filtered) +\n  geom_hline(yintercept = 45, linetype = \"dashed\", color = \"red\", alpha = 0.7) +\n  geom_line(aes(x = sample_date, y = concentration),\n            color = \"#D72638\",\n            size = 0.5) +\n  scale_x_date(date_labels = \"%b\", date_breaks = \"1 month\") +\n  labs(\n    title = bquote(\"Daily PM\"[10] * \" concentration (¬µg/m\"^3 * \") in Arrowtown, 2022\"),\n    x = \"\",\n    y = bquote(\"Daily PM\"[10] * \" concentration (¬µg/m\"^3 * \")\")\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, \n                              colour = \"#420039\"),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_text(\n      color = \"#12355B\",\n      face = \"bold\",\n      size = 14,\n      vjust = -0.5\n    )\n  ) +\n  annotate(\n    'text',\n    x = as.Date(\"2022-01-03\"),\n    y = my_breaks,\n    label = round(my_breaks, 2),\n    angle = 0,\n    hjust = -0.1,\n    vjust = 0.5\n  ) +\n  geom_segment(data = tick_data,\n               aes(\n                 x = x,\n                 xend = xend,\n                 y = y,\n                 yend = yend\n               ),\n               color = \"black\")\n\n\n\n\n\n\n\n\nFigure¬†1: PM10 daily concentrations at Arrowtown, 2022. Dashed line shows WHO guideline value."
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#make-an-animated-plot",
    "href": "posts/arrowtown-air-quality/index.html#make-an-animated-plot",
    "title": "Arrowtown air quality",
    "section": "5 Make an animated plot",
    "text": "5 Make an animated plot\nLet‚Äôs enhance our analysis by creating an animated polar chart that reveals the daily PM10 concentrations over time (Figure¬†2). This approach effectively highlights the cyclical nature of seasonal air quality. By animating the data, we can observe the progression of PM10 levels throughout the year, providing a clear visual representation of how air quality deteriorates during the winter months.\n\n\nShow the code\n# Define the start dates for each season according to New Zealand definitions\nseason_start_dates &lt;- as.Date(c(\"2022-12-01\", \"2022-03-01\", \"2022-06-01\", \"2022-09-01\"))\n\n# Create the plot with seasonal division lines and y-axis labels inside the chart\np &lt;- ggplot(dat_filtered) +\n  geom_hline(yintercept = 45, linetype = \"dashed\", color = \"red\", alpha = 0.7) +\n  geom_line(aes(x = sample_date, y = concentration),\n            color = \"#D72638\",\n            size = 0.5) +\n  geom_vline(\n    xintercept = as.numeric(season_start_dates),\n    linetype = \"dashed\",\n    color = \"black\",\n    alpha = 0.3\n  ) +\n  geom_point(aes(x = sample_date, y = concentration), color = \"#420039\", size = 2) +\n  scale_x_date(date_labels = \"%b\", date_breaks = \"1 month\") +\n  coord_curvedpolar() +\n  labs(\n    title = bquote(\"Daily PM\"[10] * \" concentration (¬µg/m\"^3 * \") in Arrowtown, 2022\"),\n    x = \"\",\n    y = \"\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, \n                              colour = \"#420039\"),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.text.x = element_text(\n      color = \"#12355B\",\n      face = \"bold\",\n      size = 14,\n      vjust = -0.5\n    )\n  ) +\n  annotate(\n    'text',\n    x = as.Date(\"2022-01-03\"),\n    y = my_breaks,\n    label = round(my_breaks, 2),\n    angle = 0,\n    hjust = -0.1,\n    vjust = 0.5\n  ) +\n  geom_segment(data = tick_data,\n               aes(\n                 x = x,\n                 xend = xend,\n                 y = y,\n                 yend = yend\n               ),\n               color = \"black\") +\n  transition_reveal(sample_date) +\n  ease_aes('linear')  # Easing to make the animation smoother\n\n# Render the animation and save as GIF\nanim &lt;- animate(p, nframes = 100, fps = 10, renderer = gifski_renderer())\n\nanim\n\n\n\n\n\n\n\n\nFigure¬†2: Animated polar chart of PM10 daily concentrations at Arrowtown, 2022. Dashed circle shows WHO guideline value. Dashed lines show seasons."
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#make-multiple-animated-plots",
    "href": "posts/arrowtown-air-quality/index.html#make-multiple-animated-plots",
    "title": "Arrowtown air quality",
    "section": "6 Make multiple animated plots",
    "text": "6 Make multiple animated plots\nNow let‚Äôs check out whether other high PM10 sites also have similar seasonal dynamics in air quality (we‚Äôll also use a different year to make sure) (Figure¬†3).\n\n\nShow the code\ntop_4 &lt;- dat |&gt; \n  filter(indicator == \"PM10\") |&gt; # just look at PM10\n  group_by(site_name) |&gt; \n  summarize(max_concentration = max(concentration, na.rm = TRUE)) |&gt; # get max conc. per site\n  arrange(desc(max_concentration)) |&gt; # sort descending\n  top_n(4, max_concentration)\n\np2 &lt;- dat |&gt; \n  filter(site_name %in% top_4$site_name) |&gt; \n  filter(indicator == \"PM10\") |&gt; \n  filter(year == 2019) |&gt;\n  arrange(sample_date) |&gt; \n  mutate(sample_date = as.Date(sample_date)) |&gt; \n  ggplot() +\n    geom_hline(yintercept = 45, linetype = \"dashed\", color = \"red\", alpha = 0.7) +\n    geom_line(aes(x = sample_date, y = concentration), color = \"#D72638\", size = 0.5) +\n    geom_point(aes(x = sample_date, y = concentration), color = \"#420039\", size = 2) +\n    scale_x_date(date_labels = \"%b\", date_breaks = \"1 month\") +\n    coord_curvedpolar() +\n    theme_minimal() +\n    labs(x = \"\", \n         y = bquote(\"Daily PM\"[10] * \" concentration (¬µg/m\"^3 * \")\")) +\n    transition_reveal(sample_date) +\n    ease_aes('linear') +\n    facet_wrap(~site_name, scales = \"free_y\")\n\n# Render the animation and save as GIF\nanim2 &lt;- animate(p2, nframes = 100, fps = 10, renderer = gifski_renderer())\n\nanim2\n\n\n\n\n\n\n\n\nFigure¬†3: Animated polar chart of PM10 daily concentrations at Arrowtown, Invercargill, Lower Hutt, and Milton, 2019. Dashed circle shows WHO guideline value. Note the y-axes differ between plots.\n\n\n\n\n\nSome interesting results here.1 Firstly, Arrowtown demonstrates similar seasonal dynamics to 2022, with low concentrations in summer and a number of exceedances during winter. Invercargill also shows similar seasonality, albeit at lower concentrations.\nLower Hutt remains well below the guideline all year-round, but exhibits reversed seasonality, with higher concentrations in summer. It‚Äôs worth noting that Lower Hutt is included in the top four due to a single large spike in 2022, so it might be reasonable to exclude this site from further analysis.\nMilton is particularly interesting as it has numerous exceedances during winter but appears not to monitor air quality during summer (this trend is true in other years as well)."
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#next-steps",
    "href": "posts/arrowtown-air-quality/index.html#next-steps",
    "title": "Arrowtown air quality",
    "section": "7 Next steps",
    "text": "7 Next steps\nThis analysis has provided some interesting insights into the seasonality of PM10 concentrations in New Zealand. The next steps could involve:\n\nConduct a formal test for seasonality between sites\nClassify sites into categories such as ‚Äòhigh-summer‚Äô, ‚Äòhigh-winter‚Äô, ‚Äòhigh-all-year-round‚Äô, or ‚Äòlow‚Äô\nProduce animations for all sites on a map\nInvestigate causes of seasonality (latitude?)\nRepeat analyses for PM2.5\nPut multiple years on single graph"
  },
  {
    "objectID": "posts/arrowtown-air-quality/index.html#footnotes",
    "href": "posts/arrowtown-air-quality/index.html#footnotes",
    "title": "Arrowtown air quality",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNote the y-axes differ between each site. This is due to the large magnitude in differences. My goal here was to explore the relative seasonality between each site, so having free axes makes sense. If the goal was instead to explore relative magnitudes between each site, I could have simply set facet_wrap(~site_name, scales = \"fixed\").‚Ü©Ô∏é"
  },
  {
    "objectID": "posts/earthquakes-animation/index.html",
    "href": "posts/earthquakes-animation/index.html",
    "title": "Earthquakes animation",
    "section": "",
    "text": "GeoNet is a partnernship between Toka T≈´ Ake EQC, GNS Science, and Land Information New Zealand (LINZ) which has been around since 2001. It is a geological hazard monitoring system that uses a network of geophysical instruments to detect earthquakes, volcanic activity, large landslides, tsunami, and slow-slip events that precede large earthquakes.\nThey make their data available in a number of API formats. Here, I use a Web Feature Service (WFS) to query the GeoNet Earthquake Catalogue for earthquakes that happened (1) last year, (2) were greater than magnitude one, (3) occurred in or near New Zealand.\nThe API bypasses the CSV download limit on their website, and the data can be directly read into R as a Simple Features (sf) spatial object.\nLibraries\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(httr)\nlibrary(gganimate)\nlibrary(patchwork)\nlibrary(ggtext)\n\n\nDownload data\n\n\nShow the code\nwfs_url &lt;- \"https://wfs.geonet.org.nz/geonet/ows\"\ntype_name &lt;- \"geonet:quake_search_v1\"\noutput_format &lt;- \"json\"\ncql_filter &lt;- \"origintime&gt;='2023-01-01T00:00:00.000Z' AND origintime&lt;'2024-01-01T00:00:00.000Z' AND magnitude&gt;1.5\"\n\nquery_url &lt;- paste0(\n  wfs_url,\n  \"?service=WFS&version=1.0.0&request=GetFeature&typeName=\", type_name,\n  \"&outputFormat=\", output_format,\n  \"&cql_filter=\", URLencode(cql_filter)\n)\n\nearthquakes_sf &lt;- st_read(query_url) |&gt; st_transform(2193)\n\ncoastline &lt;- st_read(\"data/coastline_simplified/nz-coastlines-and-islands-polygons-topo-150k.shp\", crs = 2193)\n\n\nCrop data\n\n\nShow the code\nbbox &lt;- st_as_sfc(st_bbox(c(xmin = 166, ymin = -47.5, xmax = 180, ymax = -33))) |&gt;\n  st_set_crs(4326) |&gt;\n  st_transform(2193)\n\nearthquakes_nz_sf &lt;- st_intersection(earthquakes_sf, bbox)\n\ncoastline &lt;- st_crop(coastline, bbox)"
  },
  {
    "objectID": "posts/earthquakes-animation/index.html#data-source",
    "href": "posts/earthquakes-animation/index.html#data-source",
    "title": "Earthquakes animation",
    "section": "",
    "text": "GeoNet is a partnernship between Toka T≈´ Ake EQC, GNS Science, and Land Information New Zealand (LINZ) which has been around since 2001. It is a geological hazard monitoring system that uses a network of geophysical instruments to detect earthquakes, volcanic activity, large landslides, tsunami, and slow-slip events that precede large earthquakes.\nThey make their data available in a number of API formats. Here, I use a Web Feature Service (WFS) to query the GeoNet Earthquake Catalogue for earthquakes that happened (1) last year, (2) were greater than magnitude one, (3) occurred in or near New Zealand.\nThe API bypasses the CSV download limit on their website, and the data can be directly read into R as a Simple Features (sf) spatial object.\nLibraries\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(httr)\nlibrary(gganimate)\nlibrary(patchwork)\nlibrary(ggtext)\n\n\nDownload data\n\n\nShow the code\nwfs_url &lt;- \"https://wfs.geonet.org.nz/geonet/ows\"\ntype_name &lt;- \"geonet:quake_search_v1\"\noutput_format &lt;- \"json\"\ncql_filter &lt;- \"origintime&gt;='2023-01-01T00:00:00.000Z' AND origintime&lt;'2024-01-01T00:00:00.000Z' AND magnitude&gt;1.5\"\n\nquery_url &lt;- paste0(\n  wfs_url,\n  \"?service=WFS&version=1.0.0&request=GetFeature&typeName=\", type_name,\n  \"&outputFormat=\", output_format,\n  \"&cql_filter=\", URLencode(cql_filter)\n)\n\nearthquakes_sf &lt;- st_read(query_url) |&gt; st_transform(2193)\n\ncoastline &lt;- st_read(\"data/coastline_simplified/nz-coastlines-and-islands-polygons-topo-150k.shp\", crs = 2193)\n\n\nCrop data\n\n\nShow the code\nbbox &lt;- st_as_sfc(st_bbox(c(xmin = 166, ymin = -47.5, xmax = 180, ymax = -33))) |&gt;\n  st_set_crs(4326) |&gt;\n  st_transform(2193)\n\nearthquakes_nz_sf &lt;- st_intersection(earthquakes_sf, bbox)\n\ncoastline &lt;- st_crop(coastline, bbox)"
  },
  {
    "objectID": "posts/earthquakes-animation/index.html#exploratory-data-analysis",
    "href": "posts/earthquakes-animation/index.html#exploratory-data-analysis",
    "title": "Earthquakes animation",
    "section": "2 Exploratory data analysis",
    "text": "2 Exploratory data analysis\n\n2.1 Depth and magnitude\nFirstly, let‚Äôs examine the distribution of earthquake depths and magnitudes (Figure¬†1). It‚Äôs evident that there are more shallow earthquakes than deep ones, and more small earthquakes than large ones.\n\n\nShow the code\nplot_depth &lt;- ggplot(earthquakes_nz_sf, aes(x = depth)) +\n  geom_histogram(aes(fill = ..x..), bins = 30, color = \"black\", alpha = 0.7) +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of Depths\",\n    x = \"Depth (km)\",\n    y = \"Count\"\n  ) +\n  scale_fill_viridis_c(option = \"inferno\", direction = -1) +\n  theme(\n    axis.text.x = element_text(vjust = 0.5, hjust = 0.5),\n    legend.position = \"bottom\",\n    legend.title = element_blank()\n  )\n\nbin_data &lt;- earthquakes_nz_sf %&gt;%\n  mutate(bin = cut(magnitude, breaks = seq(min(magnitude), max(magnitude), length.out = 31), include.lowest = TRUE)) %&gt;%\n  group_by(bin) %&gt;%\n  summarise(\n    magnitude = mean(magnitude),\n    count = n(),\n    magnitude_exp = mean(exp(magnitude))\n  )\n\nplot_magnitude &lt;- ggplot(earthquakes_nz_sf, aes(x = magnitude)) +\n  geom_histogram(aes(y = ..count..), bins = 30, fill = \"darkslateblue\", color = \"black\", alpha = 0.7) +\n  # geom_point(data = bin_data, aes(x = magnitude, y = count, size = magnitude_exp),\n  #            color = \"black\", alpha = 0.5) +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of Magnitudes\",\n    x = \"Magnitude\",\n    y = \"Count\"\n  ) +\n  scale_x_continuous(\n    breaks = c(1, 2, 3, 4, 5, 6, 7),\n    labels = c(\"1\\nUnnoticeable\", \"2\\nUnnoticeable\", \"3\\nWeak\", \"4\\nLight\", \"5\\nModerate\", \"6\\nStrong\", \"7\\nSevere\")\n  ) +\n  scale_size_continuous(\n    name = \"Magnitude\",\n    range = c(3, 15),\n    breaks = exp(c(3, 4, 5, 6)),\n    labels = c(\"‚â§ 3\", 4, 5, \"‚â• 6\")\n  ) +\n  theme(\n    axis.text.x = element_text(vjust = 0.5, hjust = 0.5),\n    legend.position = \"bottom\",\n    legend.title = element_blank()\n  )\n\nplot_depth + plot_magnitude\n\n\n\n\n\n\n\n\nFigure¬†1: Distribution of depths and magnitudes of earthquakes in New Zealand, 2023.\n\n\n\n\n\n\n\n2.2 Depth vs magnitude\nLet‚Äôs take this one step further and examine the relationship between depth and magnitude (Figure¬†2). Large, shallow earthquakes are the most dangerous, causing significant damage. Whilst, small, deep earthquakes are less likely to be felt by people, and there are few of these in the dataset‚Äîpossibly because they are harder for seismometers to detect.\n\n\nShow the code\nggplot(data = earthquakes_nz_sf, aes(magnitude, depth)) +\n    geom_point(aes(color = depth &gt; 35), alpha = 0.1) +\n  scale_color_manual(values = c(\"TRUE\" = \"darkorange\", \"FALSE\" = \"darkslateblue\")) +\n  geom_hline(yintercept = 35, linetype = \"dashed\") +\n  theme_minimal() +\n  labs(\n    x = \"Magnitude\",\n    y = \"Depth (km)\",\n    title = \"Earthquake depth versus magnitude\",\n    subtitle = \"Dashed line at 35 km depth boundary between &lt;span style='color:darkslateblue;'&gt;&lt;b&gt;crustal&lt;/b&gt;&lt;/span&gt; and &lt;span style='color:darkorange;'&gt;&lt;b&gt;subduction&lt;/b&gt;&lt;/span&gt; earthquakes\"\n  ) +\n  annotate(\n    geom = \"curve\", x = 5.5, y = 200, xend = 5.9, yend = 50,\n    curvature = .3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 5.5, y = 215, label = \"Shallow & strong!\", hjust = \"center\") +\n  annotate(\n    geom = \"curve\", x = 1.75, y = 450, xend = 1.75, yend = 500,\n    curvature = .3, arrow = arrow(length = unit(2, \"mm\"))\n  ) +\n  annotate(geom = \"text\", x = 1.75, y = 440, label = \"No worries\", hjust = \"center\") +\n  annotate(geom = \"text\", x = 6.5, y = 50, label = \"35km\", hjust = \"center\") +\n  theme(\n    legend.position = \"none\",\n    plot.subtitle = ggtext::element_markdown()\n  )\n\n\n\n\n\n\n\n\nFigure¬†2: Earthquake depth versus magnitude in New Zealand, 2023. Dashed line at 35 km depth boundary between crustal and subduction earthquakes."
  },
  {
    "objectID": "posts/earthquakes-animation/index.html#mapping",
    "href": "posts/earthquakes-animation/index.html#mapping",
    "title": "Earthquakes animation",
    "section": "3 Mapping",
    "text": "3 Mapping\n\n3.1 Crustal vs subduction earthquakes\nDeep earthquakes under the North Island form a well-defined line, representing the Hikurangi subduction zone where the Pacific Plate is being forced under the Australian Plate (Figure¬†3). This pattern, with deeper earthquakes towards the west of the North Island, is the Wadati‚ÄìBenioff zone.\nIn contrast, the South Island exhibits a different earthquake pattern, with the Australian Plate being forced under the Pacific Plate. This is the Alpine Fault, a transform fault responsible for the Southern Alps. The deeper earthquakes occur on the southeast edge of the Wadati‚ÄìBenioff zone, where it dips steeply to the southeast.\n\n\nShow the code\n# https://www.otago.ac.nz/geology/research/alpine-fault\n\nplot_crustal &lt;- ggplot() +\n  geom_sf(\n    data = coastline,\n    fill = \"#839073\",\n    color = NA\n  ) +\n  geom_sf(\n    data = earthquakes_nz_sf |&gt; filter(depth &lt; 35),\n    colour = \"darkslateblue\",\n    size = 0.1,\n    alpha = 0.7\n  ) +\n  coord_sf(xlim = c(1050000, 2200000), ylim = c(4700000, 6200000)) +\n  theme_void() +\n  labs(\n    title = \"&lt;span style='color:darkslateblue'&gt;Crustal&lt;/span&gt; earthquakes &lt;br&gt;&lt; 35km deep\",\n    x = \"\",\n    y = \"\"\n  ) +\n  theme(plot.title = element_markdown(\n    family = \"sans\", size = 12, face = \"bold\", color = \"#394053\", hjust = 0.5\n  )) +\n    annotate(\n    \"curve\", x = 1680000, y = 5746015, xend = 1851604, yend = 5703141,\n    curvature = .3, arrow = arrow(length = unit(2, \"mm\")), color = \"black\",\n    linewidth = 0.25\n  ) +\n  annotate(\n    \"text\", x = 1670000, y = 5746015, label = \"Taup≈ç volcanic zone\", hjust = \"right\", color = \"black\", size = 2.5\n  ) +\n    annotate(\n    \"curve\", x = 1894962, y = 6057348, xend = 1969587, yend = 5839512,\n    curvature = .3, arrow = arrow(length = unit(2, \"mm\")), color = \"black\",\n    linewidth = 0.25\n  ) +\n  annotate(\n    \"text\", x = 1894962, y = 6057348, label = \"Whakaari \\nWhite Island\", hjust = \"centre\",\n    vjust = -0.15, color = \"black\", size = 2.5\n  )\n\nplot_subduction &lt;- ggplot() +\n  geom_sf(\n    data = coastline,\n    fill = \"#839073\",\n    color = NA\n  ) +\n  geom_sf(\n    data = earthquakes_nz_sf |&gt; filter(depth &gt; 35),\n    aes(color = depth),\n    size = 0.1,\n    alpha = 0.7\n  ) +\n  coord_sf(xlim = c(1050000, 2200000), ylim = c(4700000, 6200000)) +\n  theme_void() +\n  labs(\n    title = \"&lt;span style='color:darkorange'&gt;Subduction&lt;/span&gt; earthquakes &lt;br&gt;&gt; 35km deep\",\n    x = \"\",\n    y = \"\",\n    color = \"Depth (km)\",\n    size = \"Magnitude\"\n  ) +\n  theme(\n    plot.title = element_markdown(\n      family = \"sans\", size = 12, face = \"bold\", color = \"#394053\", hjust = 0.5\n    ),\n    legend.position = \"bottom\"\n  ) +\n  scale_color_viridis_c(option = \"inferno\", direction = -1) +\n    annotate(\n    \"curve\", x = 1680000, y = 5000000, xend = 1450000, yend = 5200000,\n    curvature = .3, arrow = arrow(length = unit(2, \"mm\")), color = \"black\",\n    linewidth = 0.25\n  ) +\n  annotate(\n    \"text\", x = 1680000, y = 4930000, label = \"Notable gap in deep \\nearthquakes\", hjust = 0.5, color = \"black\", size = 2.5\n  )\n\nplot_crustal + plot_subduction\n\n\n\n\n\n\n\n\nFigure¬†3: Crustal and subduction earthquakes in New Zealand, 2023. The Hikurangi subduction zone is visible under the North Island, and the Alpine Fault under the South Island.\n\n\n\n\n\n\n\n3.2 Static map\nLet‚Äôs plot all of the earthquakes on a map of New Zealand (Figure¬†4). We‚Äôll use the geom_sf function to plot the earthquakes and the coastline. Additionally we‚Äôll use the scale_size_continuous function to adjust the size of the points based on the magnitude of the earthquake, applying an exponential transformation to reflect the disproportionately larger amount of energy released by larger magnitude earthquakes.\n\n\nShow the code\nggplot() +\n  geom_sf(\n    data = coastline,\n    fill = \"#839073\",\n    color = NA\n  ) +\n  geom_sf(\n    data = earthquakes_nz_sf,\n    aes(color = depth, size = exp(magnitude)),\n    alpha = 0.2\n  ) +\n  scale_size_continuous(\n    name = \"Magnitude\",\n    range = c(0.01, 8),\n    breaks = exp(c(3, 4, 5, 6)),\n    labels = c(\"‚â§ 3\", 4, 5, \"‚â• 6\")\n  ) +\n  coord_sf(xlim = c(1050000, 2200000), ylim = c(4700000, 6200000)) +\n  theme_void() +\n  labs(\n    title = \"Earthquakes in New Zealand (2023)\",\n    x = \"\",\n    y = \"\",\n    color = \"Depth (km)\",\n    size = \"Magnitude\"\n  ) +\n  theme(plot.title = element_text(\n    family = \"sans\", size = 12, face = \"bold\", color = \"#394053\", hjust = 0.5, vjust = 2.5\n  )) +\n  scale_color_viridis_c(\n    option = \"inferno\",\n    direction = -1\n  )\n\n\n\n\n\n\n\n\nFigure¬†4: Earthquakes in New Zealand, 2023. The size of the points represents the magnitude of the earthquake, and the colour represents the depth.\n\n\n\n\n\n\n\n3.3 Animated plot\nNow, to make it animated! We‚Äôll use the gganimate package to create an animated plot of the earthquakes over time (Figure¬†5). We‚Äôll use the transition_time function to animate the plot over the origintime variable, which is the date of the earthquake. Additionally, we‚Äôll use the shadow_mark function to leave a shadow of the earthquakes that have already occurred.\n\n\nShow the code\np &lt;- ggplot() +\n  geom_sf(\n    data = coastline,\n    fill = \"#839073\",\n    color = NA\n  ) +\n  geom_sf(\n    data = earthquakes_nz_sf,\n    aes(color = depth, size = exp(magnitude)),\n    alpha = 0.4\n  ) +\n  scale_size_continuous(\n    name = \"Magnitude\",\n    range = c(0.01, 6), \n    breaks = exp(c(3, 4, 5, 6)),\n    labels = c(\"‚â§ 3\", 4, 5, \"‚â• 6\")\n  ) +\n  coord_sf(xlim = c(1050000, 2200000), ylim = c(4700000, 6200000)) +\n  theme_void() +\n  labs(\n    title = \"Earthquakes in New Zealand (2023)\",\n    subtitle = \"Date: {lubridate::as_date(next_state)}\",\n    x = \"\",\n    y = \"\",\n    color = \"Depth (km)\",\n    size = \"Magnitude\"\n  ) +\n  scale_color_viridis_c(\n    option = \"inferno\",\n    direction = -1\n  ) +\n  theme(\n    plot.title = element_text(family = \"sans\", size = 12, face = \"bold\", color = \"#394053\",\n                              hjust = 0.5),\n    plot.subtitle = element_text(size = 8, hjust = 0.5),\n    legend.title = element_text(size = 8)\n  ) +\n  guides(color = guide_colourbar(reverse = T)) +\n  transition_states(origintime, transition_length = 2, state_length = 1) +\n  shadow_mark(past = TRUE)\n\nanimate(p,\n  start_pause = 15,\n  end_pause = 60,\n  nframes = 300,\n  fps = 20,\n  res = 300,\n  renderer = gifski_renderer()\n)\n\n\n\n\n\n\n\n\nFigure¬†5: Animated plot of earthquakes in New Zealand, 2023. The size of the points represents the magnitude of the earthquake, and the colour represents the depth."
  },
  {
    "objectID": "posts/earthquakes-animation/index.html#conclusion",
    "href": "posts/earthquakes-animation/index.html#conclusion",
    "title": "Earthquakes animation",
    "section": "4 Conclusion",
    "text": "4 Conclusion\nSo that‚Äôs it! We‚Äôve explored the earthquakes in New Zealand in 2023, focusing on their distribution, the relationship between depth and magnitude, and the spatial patterns relative to tectonic plate boundaries. We‚Äôve created static and animated visualisations to enhance our understanding of the data and effectively communicate our findings.\nNext steps could include further analysis of the data, such as:\n\nClustering the earthquakes to identify regions of high seismic activity.\nExploring the relationship between earthquakes and other geophysical data, such as volcanic activity or fault lines.\nPlotting seismograms to visualise the seismic waves generated by particular earthquakes."
  },
  {
    "objectID": "posts/3d-population-grid/index.html",
    "href": "posts/3d-population-grid/index.html",
    "title": "3D population density mapping",
    "section": "",
    "text": "Show the code\noptions(rgl.useNULL = TRUE)\nrgl::setupKnitr(autoprint = TRUE)"
  },
  {
    "objectID": "posts/3d-population-grid/index.html#introduction",
    "href": "posts/3d-population-grid/index.html#introduction",
    "title": "3D population density mapping",
    "section": "1 Introduction",
    "text": "1 Introduction\n3D maps can be both informative and visually stunning. I recently created some 3D population density maps for New Zealand using the R package rayshader, mainly because they look cool! Let‚Äôs dive into how these maps were made and what they show.\nFor more details on this same population grid, see my previous post."
  },
  {
    "objectID": "posts/3d-population-grid/index.html#data-and-methods",
    "href": "posts/3d-population-grid/index.html#data-and-methods",
    "title": "3D population density mapping",
    "section": "2 Data and methods",
    "text": "2 Data and methods\nFor these maps, I used the 2022 Estimated Resident Population Grid data for New Zealand. With R and the awesome rayshader package, I transformed this data into 3D visualisations that really pop. Rayshader makes it super easy to add depth and perspective, turning flat data into eye-catching 3D landscapes.\nI have to give credit to this Medium post and sherifscript‚Äôs GitHub repo for providing inspiration for most of the code.\n\n\nShow the code\n# libraries\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(koordinatr)\nlibrary(stars)\nlibrary(rayshader)\nlibrary(rayrender)\nlibrary(magick)\n\n# import data \n# 1km population grid\ndat &lt;- koordinatr::get_layer_as_sf(api_key = Sys.getenv(\"koordinates_api_key\"),\n                                   agency = \"statsnz\",\n                                   id = \"115051\")\n\n# set bounding box for mainland nz\nmainland_bbox_nztm &lt;- st_bbox(c(xmin = 1060000, ymin = 4700000, xmax = 2080000, ymax = 6300000), crs = st_crs(2193))\n\n# crop the sf object to the bounding box\ndat &lt;- st_crop(dat, mainland_bbox_nztm)\n\n# get the bounding box of the final data\nbbox &lt;- st_bbox(dat)\n\n# finding the aspect ratio\nbottom_left &lt;- st_point(c(bbox[[\"xmin\"]], bbox[[\"ymin\"]])) %&gt;%\n  st_sfc(crs = 2193)\nbottom_right &lt;- st_point(c(bbox[[\"xmax\"]], bbox[[\"ymin\"]])) %&gt;%\n  st_sfc(crs = 2193)\ntop_left &lt;- st_point(c(bbox[[\"xmin\"]], bbox[[\"ymax\"]])) %&gt;%\n  st_sfc(crs = 2193)\ntop_right &lt;- st_point(c(bbox[[\"xmin\"]], bbox[[\"ymax\"]])) %&gt;%\n  st_sfc(crs = 2193)\n\n# calculate width and height\nwidth &lt;- st_distance(bottom_left, bottom_right)\nheight &lt;- st_distance(bottom_left, top_left)\n\n# calculate aspect ratio\nif(width &gt; height) {\n  w_ratio = 1\n  h_ratio = height / width\n  \n} else {\n  h_ratio = 1.1\n  w_ratio = width / height\n}\n\n# convert to raster to convert to matrix\nsize = 1000 * 3.5\n\npop_raster &lt;- st_rasterize(\n  dat,\n  nx = floor(size * w_ratio) %&gt;% as.numeric(),\n  ny = floor(size * h_ratio) %&gt;% as.numeric()\n)\n\npop_matrix &lt;- matrix(pop_raster$ERP_2022,\n                     nrow = floor(size * w_ratio),\n                     ncol = floor(size * h_ratio))\n\n# setup colour palette\ncolor &lt;- MetBrewer::met.brewer(name = \"Benedictus\", direction = -1)\n\ntx &lt;- grDevices::colorRampPalette(color, bias = 4.5)(256)\ncolorspace::swatchplot(tx)\n\n\nShow the code\n# create the 3d plot\npop_matrix %&gt;%\n  height_shade(texture = tx) %&gt;%\n  plot_3d(heightmap = pop_matrix,\n          zscale = 20,\n          solid = F,\n          shadowdepth = 0)\n\n# adjusting camera angle for oblique view\nrender_camera(theta = 0,\n              phi = 30,\n              zoom = 0.5,\n              fov = 100,\n              shift_vertical = -300\n)\n\n# render\nrender_highquality(\n  filename = \"plot/oblique_nz.png\",\n  interactive = F,\n  lightdirection = 280, \n  lightaltitude = c(30, 80),\n  lightcolor = c('white', 'white'),  # Set both lights to white\n  lightintensity = c(600, 100),\n  width = 3000,\n  height = 3000,\n  samples = 200) #200\n\n# adjusting camera angle for top down view\nrender_camera(theta = 0,\n              phi = 89,\n              zoom = 0.5,\n              fov = 100,\n              shift_vertical = 0\n)\n\n# render\nrender_highquality(\n  filename = \"plot/top_down_nz.png\",\n  interactive = F,\n  lightdirection = 280, \n  lightaltitude = c(30, 80),\n  lightcolor = c('white', 'white'),  # Set both lights to white\n  lightintensity = c(600, 100),\n  width = 2000,\n  height = 3000,\n  samples = 200) # 200 \n\n# text colour \ntext_color &lt;- colorspace::darken(color[3], .4)\ncolorspace::swatchplot(text_color)\n\n\nShow the code\n# read file back in\ntop_down_nz &lt;- image_read(\"plot/top_down_nz.png\")\n\n# add annotations\ntop_down_nz |&gt; \n  image_annotate(\"New Zealand\",\n                 gravity = \"northeast\",\n                 location = \"+50+50\",\n                 color = text_color,\n                 size = 160,\n                 font = \"Philosopher\",\n                 weight = 700,\n  ) |&gt; \n  image_annotate(\"2022 POPULATION DENSITY MAP\",\n                 gravity = \"northeast\",\n                 location = \"+50+195\",\n                 color = text_color,\n                 size = 50,\n                 font = \"Philosopher\",  # Corrected font name\n                 weight = 500,\n  ) |&gt; \n  image_annotate(\"isaacbain.com\",\n                 gravity = \"southwest\",\n                 location = \"+20+20\",\n                 color = alpha(text_color, .8),\n                 font = \"Philosopher\",  # Corrected font name\n                 size = 35,\n  ) |&gt; \n  image_write(\"plot/annotated_top_down_nz.png\", format = \"png\", quality = 100)\n\n# read file back in\noblique_nz &lt;- image_read(\"plot/oblique_nz.png\")\n\n# crop, then add annotations\noblique_nz |&gt; \n  image_crop(\n    \"2500x2500-0+500\"\n  ) |&gt; \n  image_annotate(\"New Zealand\",\n                 gravity = \"northeast\",\n                 location = \"+50+50\",\n                 color = text_color,\n                 size = 160,\n                 font = \"Philosopher\",\n                 weight = 700,\n  ) |&gt; \n  image_annotate(\"2022 POPULATION DENSITY MAP\",\n                 gravity = \"northeast\",\n                 location = \"+50+195\",\n                 color = text_color,\n                 size = 50,\n                 font = \"Philosopher\",  # Corrected font name\n                 weight = 500,\n  ) |&gt; \n  image_annotate(\"isaacbain.com\",\n                 gravity = \"southwest\",\n                 location = \"+20+20\",\n                 color = alpha(text_color, .8),\n                 font = \"Philosopher\",  # Corrected font name\n                 size = 35,\n  ) |&gt; \n  image_write(\"plot/annotated_oblique_nz.png\", format = \"png\", quality = 100)"
  },
  {
    "objectID": "posts/3d-population-grid/index.html#results-and-interpretation",
    "href": "posts/3d-population-grid/index.html#results-and-interpretation",
    "title": "3D population density mapping",
    "section": "3 Results and interpretation",
    "text": "3 Results and interpretation\nCheck out these maps! They highlight where people are clustered, with taller spikes indicating higher population densities. You can clearly see urban centres like Auckland, Wellington, and Christchurch standing out, while rural areas have much shorter peaks.\n(click to zoom in)"
  },
  {
    "objectID": "posts/3d-population-grid/index.html#why-3d-maps",
    "href": "posts/3d-population-grid/index.html#why-3d-maps",
    "title": "3D population density mapping",
    "section": "4 Why 3D maps?",
    "text": "4 Why 3D maps?\n\nVisual Appeal: Let‚Äôs be honest, they just look amazing. The 3D effect adds a whole new dimension (literally!) to the data.\nEasy to Understand: Even at a glance, you can see where the population is concentrated.\nEngaging: These maps can grab attention and spark interest in data that might otherwise seem dry."
  },
  {
    "objectID": "posts/3d-population-grid/index.html#conclusion",
    "href": "posts/3d-population-grid/index.html#conclusion",
    "title": "3D population density mapping",
    "section": "5 Conclusion",
    "text": "5 Conclusion\n3D population density maps aren‚Äôt just for data geeks‚Äîthey‚Äôre a fantastic way to make information visually appealing and accessible. Give rayshader a try if you‚Äôre into data visualisation. Who knew population data could look this good?"
  },
  {
    "objectID": "posts/population-grid/index.html",
    "href": "posts/population-grid/index.html",
    "title": "Exploring the Estimated Resident Population Grid",
    "section": "",
    "text": "Understanding the distribution of human populations is crucial for various applications, from urban planning to environmental management. Statistics New Zealand‚Äôs recently released 2022 Estimated Resident Population Grid provides an invaluable new resource for researchers, policymakers, and spatial analysts.\nThis dataset stands out due to its fine resolution. Previously, the highest resolution population information was available at the Statistical Area 1 (SA1) level, with SA1s typically having between 100-200 residents, and a maximum population of about 500. The critical thing here is that SA1s vary in size, being smaller in urban areas and larger in rural ones1.\nNow, these population grid layers offer a much finer resolution, available at 250 metre2, 500 metre3, or 1000 metre4 sizes. To create these population grids, Stats NZ disaggregated population counts from larger geographic areas (i.e., meshblocks) into smaller regular grid cells. This was done using a combination of spatial interpolation methods and ancillary data, such as land use and residential building locations, to accurately distribute the population estimates across the grid.\n\n\nLibraries code\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(koordinatr)\nlibrary(ggdark)\nlibrary(ggfx)\nlibrary(ggtext)\n\n\n\n\nImport data code\n# 500m \ndat &lt;- koordinatr::get_layer_as_sf(api_key = Sys.getenv(\"koordinates_api_key\"),\n                                  agency = \"statsnz\",\n                                  id = \"115050\")\n\ncoastline &lt;- st_read(\"data/coastline_simplified/nz-coastlines-and-islands-polygons-topo-150k.shp\", crs = 2193)"
  },
  {
    "objectID": "posts/population-grid/index.html#overview",
    "href": "posts/population-grid/index.html#overview",
    "title": "Exploring the Estimated Resident Population Grid",
    "section": "",
    "text": "Understanding the distribution of human populations is crucial for various applications, from urban planning to environmental management. Statistics New Zealand‚Äôs recently released 2022 Estimated Resident Population Grid provides an invaluable new resource for researchers, policymakers, and spatial analysts.\nThis dataset stands out due to its fine resolution. Previously, the highest resolution population information was available at the Statistical Area 1 (SA1) level, with SA1s typically having between 100-200 residents, and a maximum population of about 500. The critical thing here is that SA1s vary in size, being smaller in urban areas and larger in rural ones1.\nNow, these population grid layers offer a much finer resolution, available at 250 metre2, 500 metre3, or 1000 metre4 sizes. To create these population grids, Stats NZ disaggregated population counts from larger geographic areas (i.e., meshblocks) into smaller regular grid cells. This was done using a combination of spatial interpolation methods and ancillary data, such as land use and residential building locations, to accurately distribute the population estimates across the grid.\n\n\nLibraries code\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(koordinatr)\nlibrary(ggdark)\nlibrary(ggfx)\nlibrary(ggtext)\n\n\n\n\nImport data code\n# 500m \ndat &lt;- koordinatr::get_layer_as_sf(api_key = Sys.getenv(\"koordinates_api_key\"),\n                                  agency = \"statsnz\",\n                                  id = \"115050\")\n\ncoastline &lt;- st_read(\"data/coastline_simplified/nz-coastlines-and-islands-polygons-topo-150k.shp\", crs = 2193)"
  },
  {
    "objectID": "posts/population-grid/index.html#inspiration",
    "href": "posts/population-grid/index.html#inspiration",
    "title": "Exploring the Estimated Resident Population Grid",
    "section": "2 Inspiration",
    "text": "2 Inspiration\nI wanted to create something that resembled a satellite image or a photo from the International Space Station looking down on New Zealand at night, with the lights of all the different cities shining back (ignoring the fact this is also known as light pollution!).\nHere‚Äôs two examples from Loss of the Night and NASA:"
  },
  {
    "objectID": "posts/population-grid/index.html#creating-the-plot",
    "href": "posts/population-grid/index.html#creating-the-plot",
    "title": "Exploring the Estimated Resident Population Grid",
    "section": "3 Creating the plot",
    "text": "3 Creating the plot\nThe data were provided in a rectangular regular grid, with counts of the Estimated Resident Population per grid cell. To address the wide range of values and maintain aesthetic appeal, a log-transform of the counts was applied. The legend was back-transformed to improve readability.\nI used the ggfx package to add an outer glow to the coastline, and the ggdark package to create a dark theme for the plot. The colour scale was from the viridis palette, which is a perceptually uniform colour scale that is designed to be colour blind-friendly.\n\n\nShow the code\nggplot() +\n  with_outer_glow(\n    geom_sf(data = coastline, fill = \"black\", colour = NA),\n    colour = \"#262525\",\n    sigma = 60, \n    expand = 30\n  ) +\n  geom_sf(data = dat, aes(fill = log(ERP_2022)), colour = NA) +\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    breaks = log(c(1, 5, 20, 100, 500)), # Adjust breaks for normal scale\n    labels = c(\"1\", \"5\", \"20\", \"100\", \"500\"), # Corresponding labels\n    guide = guide_colourbar(title.position = \"top\", title.hjust = 0.5, direction = \"horizontal\")\n  ) +\n  coord_sf(xlim = c(1050000, 2200000), ylim = c(4700000, 6200000)) +\n  ggdark::dark_theme_void(base_size = 14) +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.75, 0.2),\n    legend.key.width = unit(1.25, \"cm\"),\n    legend.title = element_text(size = rel(0.7), hjust = 0.5, color = \"#847E89\"),\n    legend.text = element_text(color = \"#847E89\"),\n    plot.caption = element_text(color = \"#847E89\"),\n    plot.title = element_markdown(\n      family = \"Baskerville\", \n      size = rel(2.75),\n      color = \"#C2D3CD\",\n      hjust = 0.5,\n      margin = margin(14, 0, 4, 0)\n    ),\n    plot.subtitle = element_markdown(\n      family = \"Montserrat\", \n      color = \"#9FA4A9\",\n      hjust = 0.5\n    )\n  ) +\n  labs(\n    title = \"People patterns in Aotearoa\",\n    subtitle = \"Population density from StatsNZ 2023 census data\",\n    caption = \"isaacbain.com\",\n    fill = \"Estimated Resident Population\\n per 500m2\"\n  )"
  },
  {
    "objectID": "posts/population-grid/index.html#conclusion",
    "href": "posts/population-grid/index.html#conclusion",
    "title": "Exploring the Estimated Resident Population Grid",
    "section": "4 Conclusion",
    "text": "4 Conclusion\nI had a lot of fun making this population density map in a dark theme. The resulting visualisation not only highlights population patterns but also provides a visually striking representation of New Zealand‚Äôs demographic landscape.\nThe improvement in spatial resolution offered by this data could significantly enhance research applications. For instance, it enables more accurate distribution of populations onto river networks, allowing us to answer questions such as how many people live upstream of any given river segment.\nStay tuned for a future post on this topic."
  },
  {
    "objectID": "posts/population-grid/index.html#footnotes",
    "href": "posts/population-grid/index.html#footnotes",
    "title": "Exploring the Estimated Resident Population Grid",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe largest SA1 is in the south-west corner of the South Island, in Fiordland National Park covering 5800 km2. Whilst the smallest SA1 is a single building in central Wellington, covering 0.00064 km2.‚Ü©Ô∏é\nhttps://datafinder.stats.govt.nz/layer/115047-new-zealand-2022-estimated-resident-population-grid-250-metre-2023/‚Ü©Ô∏é\nhttps://datafinder.stats.govt.nz/layer/115050-new-zealand-2022-estimated-resident-population-grid-500-metre-2023/‚Ü©Ô∏é\nhttps://datafinder.stats.govt.nz/layer/115051-new-zealand-2022-estimated-resident-population-grid-1-kilometre-2023/‚Ü©Ô∏é"
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html",
    "href": "posts/lakes-small-multiples/index.html",
    "title": "Lakes small multiples",
    "section": "",
    "text": "I‚Äôve been inspired by a new type of small multiples map I‚Äôve seen, where multipolygons are extracted from their spatial locations and reassembled in a grid while maintaining their relative sizes. If you unsure what I mean, check out this one as an example. So I thought I‚Äôd try applying it to some lakes data in New Zealand."
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html#libraries-and-import-data",
    "href": "posts/lakes-small-multiples/index.html#libraries-and-import-data",
    "title": "Lakes small multiples",
    "section": "1 Libraries and import data",
    "text": "1 Libraries and import data\nThe Department of Conservation‚Äôs Freshwater Ecosystems of New Zealand (FENZ) geodatabase provided the lake boundary polygons. While one could also source these from the LINZ topo map layers, the advantage of the FENZ layer is that it can be linked to other datasets, such as modelled water quality.\nThe Ministry for the Environment provides modelled lake water quality data for 3,813 lakes in New Zealand that are larger than 1 hectare. This data can be joined using the FENZ lake ID. The dataset is generated by a statistical learning model (specifically, a random forest model) trained on actual monitoring data and using a number of environmental predictors to extrapolate out to unmeasured lakes.\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(gridExtra)\n\nlakes &lt;- st_read(\"data/fenz_v1_lakes/FENZ_v1_Lakes.shp\", quiet = TRUE) |&gt;\n  janitor::clean_names() |&gt; \n  drop_na(name)\n\nwq &lt;- read_csv(\"data/mfe-lake-water-quality-modelled-2016-2020-CSV/lake-water-quality-modelled-2016-2020.csv\") |&gt;\n  janitor::clean_names() |&gt; \n  filter(indicator == \"TLI3\")\n\nlakes &lt;- lakes |&gt; \n  left_join(wq, by = c(\"lid\" = \"lfenzid\"))"
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html#what-are-the-largest-lakes-in-new-zealand",
    "href": "posts/lakes-small-multiples/index.html#what-are-the-largest-lakes-in-new-zealand",
    "title": "Lakes small multiples",
    "section": "2 What are the largest lakes in New Zealand?",
    "text": "2 What are the largest lakes in New Zealand?\nSorting the lakes dataset by size (surface area) and selecting the largest ones is a fairly straightforward task. Interestingly, there is a discrepancy between my data and this Wikipedia page listing the sizes of lakes in NZ. Wikipedia lists it as 141 km2, whereas my data shows it as 152 km2. Since the Wikipedia article does not list its sources, the origin of this discrepancy remains unclear!1\nI‚Äôve have also selected Trophic Level Index (TLI) as an indicator of water quality - more on that below.\n\n\nShow the code\nlakes_20 &lt;- lakes |&gt; \n  top_n(n = 20, wt = shape_area)\n\nmapview::mapview(lakes_20)\n\n\n\n\n\n\nShow the code\nlakes_20 |&gt; \n  st_drop_geometry() |&gt; \n  select(name, shape_area, value) |&gt; \n  arrange(desc(shape_area)) |&gt; \n  mutate(shape_area = shape_area / 1e6) |&gt; \n  rename(Name = name,\n         `Lake area (km2)` = shape_area,\n         TLI3 = value) |&gt; \n  knitr::kable(digits = 1)\n\n\n\n\n\nName\nLake area (km2)\nTLI3\n\n\n\n\nLake Taupo (Taupomoana)\n613.3\n2.6\n\n\nLake Te Anau\n344.2\n1.6\n\n\nLake Wakatipu\n299.0\n1.5\n\n\nLake Wanaka\n204.3\n1.7\n\n\nLake Ellesmere (Te Waihora)\n197.7\n6.0\n\n\nLake Pukaki\n172.8\n1.7\n\n\nLake Hawea\n152.0\n1.4\n\n\nLake Manapouri\n142.3\n1.7\n\n\nLake Tekapo\n96.6\n1.6\n\n\nLake Rotorua\n80.6\n4.2\n\n\nLake Wairarapa\n77.4\n4.6\n\n\nLake Benmore\n75.9\n1.9\n\n\nLake Hauroko\n72.2\n2.6\n\n\nLake Ohau\n59.3\n1.7\n\n\nLake Waikaremoana\n50.0\n2.8\n\n\nLake Poteriteri\n44.4\n3.0\n\n\nLake Tarawera\n41.2\n3.1\n\n\nLake Brunner (Moana)\n40.6\n2.9\n\n\nLake Coleridge\n36.9\n2.1\n\n\nLake Waikare\n34.4\n6.3\n\n\n\n\n\nThere‚Äôs an interesting pattern regarding lake size and water quality. None of the lakes with very low values of TLI3 (e.g &lt;2) are small. This could just be an artifact of the modelled data, perhaps a relationship that the model has learned incorrectly due to a strong bias in the training data. It would be better to using monitoring data here to confirm this relationship.\n\n\nShow the code\nlakes |&gt; \n  st_drop_geometry() |&gt; \n  select(name, shape_area, value) |&gt; \n  mutate(shape_area = shape_area / 1e6) |&gt; \n  ggplot(aes(value, shape_area)) +\n  geom_point() +\n  geom_smooth() +\n  labs(x = \"TLI3 score\", y = \"Lake area (km2)\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html#plot-the-20-largest-lakes",
    "href": "posts/lakes-small-multiples/index.html#plot-the-20-largest-lakes",
    "title": "Lakes small multiples",
    "section": "3 Plot the 20 largest lakes",
    "text": "3 Plot the 20 largest lakes\nNow, let‚Äôs get down to plotting the largest lakes, and colour them by their respective TLI3 score. LAWA provides a good fact sheet on what this metric means. In short:\n\nThe Trophic Level Index (TLI) is a method of characterising the ecological health of lakes based on the amount of nutrients and algae growing in them. It provides an integrated measure of water quality that can be tracked over time and that can be used to estimate biological productivity. It is presented as a score, the lower the score the better the condition of the lake.\n\nHere‚Äôs what the scores correspond to in ecological terms:\n\n\n\n\n\n\n\nTLI Score\nDescription\n\n\n\n\n0‚Äì2\nMicrotrophic: The lake is very clean with very low levels of nutrients and algae. The lake can have snow or glacial sources.\n\n\n&gt;2‚Äì3\nOligotrophic: The lake is clear and blue, with low levels of nutrients and algae.\n\n\n&gt;3‚Äì4\nMesotrophic: The lake has moderate levels of nutrients and algae.\n\n\n&gt;4‚Äì5\nEutrophic: The lake is murky, with high amounts of nutrients and algae.\n\n\n&gt;5\nSupertrophic: The lake has very high amounts of phosphorus and nitrogen, and can be overly fertile and often associated with poor water clarity. Excessive algae growth can occur. Suitability for recreational purposes is often poor.\n\n\n\n\n\nShow the code\n# Calculate centroids\nlake_polygons &lt;- lakes_20 %&gt;%\n  mutate(centroid = st_centroid(st_geometry(.)))\n\n# Sort the lake polygons by shape_area in descending order\nlake_polygons &lt;- lake_polygons %&gt;%\n  arrange(desc(shape_area))\n\n# Compute bounding boxes and find the maximum width and height\nbboxes &lt;- lapply(st_geometry(lake_polygons), function(x) as.numeric(st_bbox(x)))\nmax_width &lt;- max(sapply(bboxes, function(x) abs(x[1] - x[3])))\nmax_height &lt;- max(sapply(bboxes, function(x) abs(x[2] - x[4])))\n\n# Set padding to ensure polygons are not cut off\npadding &lt;- 3500  # Adjust this value based on your specific spatial scale\n\n# Calculate colors based on value\nlake_polygons$color &lt;- viridis::viridis(\n  n = nrow(lake_polygons), \n  option = \"D\", \n  direction = 1\n)[cut(lake_polygons$value, breaks = nrow(lake_polygons), labels = FALSE)]\n\n# Function to make plots\ngraph &lt;- function(x) {\n  centroid &lt;- st_coordinates(lake_polygons$centroid[x])\n  ggplot(lake_polygons[x, ]) +\n    geom_sf(fill = lake_polygons$color[x], colour = NA) +\n    coord_sf(xlim = c(centroid[1] - max_width/2 - padding, centroid[1] + max_width/2 + padding), \n             ylim = c(centroid[2] - max_height/2 - padding, centroid[2] + max_height/2 + padding), \n             expand = FALSE) +\n    theme_void() +\n    ggtitle(str_wrap(lake_polygons$name[x], width = 20)) +\n    theme(plot.title = element_text(hjust = 0.5, size = 10, vjust = 1),\n          legend.position = \"none\")\n}\n\n# Create a list of plots\nplot_list &lt;- lapply(1:nrow(lake_polygons), FUN = graph)\n\n# Combine plots and titles\ncombined_list &lt;- lapply(plot_list, function(p) {\n  title &lt;- ggplot_build(p)$layout$panel_params[[1]]$title\n  gridExtra::arrangeGrob(p, top = grid::textGrob(\n    label = title,\n    gp = grid::gpar(fontsize = 10),\n    hjust = 0.5,\n    vjust = 1\n  ))\n})\n\n# Create the overall title and subtitle grobs\noverall_title &lt;- grid::textGrob(\"The 20 Largest Lakes of New Zealand\", gp = grid::gpar(fontsize = 16, fontface = \"bold\"))\nsubtitle &lt;- grid::textGrob(\"Coloured by Trophic Level Index\", gp = grid::gpar(fontsize = 12))\n\n# Create a common legend plot to extract the legend\nlegend_plot &lt;- ggplot(lake_polygons) +\n  geom_sf(aes(fill = value), colour = NA) +\n  scale_fill_viridis_c(name = \"TLI3\", option = \"D\", direction = 1) +\n  theme_void() +\n  theme(\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10, hjust = 0.5),\n    legend.title.position = \"top\",\n    legend.text = element_text(size = 8),\n    legend.box.margin = margin(0, 0, 0, 0)\n  )\n\n# Extract the legend\nlegend_grob &lt;- cowplot::get_plot_component(legend_plot, 'guide-box-bottom', return_all = TRUE)\n\n# Arrange the plots together with the overall title and subtitle\nfinal_plot &lt;- gridExtra::grid.arrange(\n  gridExtra::arrangeGrob(overall_title, subtitle, ncol = 1, heights = c(0.08, 0.05)),\n  do.call(gridExtra::arrangeGrob, c(combined_list, ncol = 5)),\n  legend_grob,\n  nrow = 3,\n  heights = c(0.1, 0.8, 0.1)\n)"
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html#plot-the-50-largest-lakes",
    "href": "posts/lakes-small-multiples/index.html#plot-the-50-largest-lakes",
    "title": "Lakes small multiples",
    "section": "4 Plot the 50 largest lakes",
    "text": "4 Plot the 50 largest lakes\nBonus just for the blog readers‚Ä¶ here‚Äôs the plot for the 50 largest lakes in New Zealand!"
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html#next-steps",
    "href": "posts/lakes-small-multiples/index.html#next-steps",
    "title": "Lakes small multiples",
    "section": "5 Next steps",
    "text": "5 Next steps\n\nPlot the smallest 20 lakes\nMake an estuaries small multiples map\nFigure out how to shrink the rows for the smaller lakes"
  },
  {
    "objectID": "posts/lakes-small-multiples/index.html#footnotes",
    "href": "posts/lakes-small-multiples/index.html#footnotes",
    "title": "Lakes small multiples",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nLakes380 lists it as 151.77 km2, Fish and Game as 124 km2, and Queenstown Lakes District Council as 149 km2.‚Ü©Ô∏é"
  },
  {
    "objectID": "posts/koordinatr/index.html",
    "href": "posts/koordinatr/index.html",
    "title": "Koordinates API for R",
    "section": "",
    "text": "Many government agencies1 in New Zealand provide spatial and tabular data through data services built on the fantastic Koordinates platform. The challenge arises when trying to import this data into R, as it involves several steps:\n\nAdd the dataset to your cart\nCreate an export\nWait for file to finish processing\nDownload the file to your computer\nOpen R\nNavigate to the file path of the downloaded folder (e.g., in read_csv() or read_sf())\nFinally, read the file into R.\n\nBy utilising an API, we can bypass many of these steps and read a dataset directly into R. Additionally, using an API provides the benefit of accessing the most up-to-date data, facilitating collaboration, and using version control without the need to share data files."
  },
  {
    "objectID": "posts/koordinatr/index.html#the-problem",
    "href": "posts/koordinatr/index.html#the-problem",
    "title": "Koordinates API for R",
    "section": "",
    "text": "Many government agencies1 in New Zealand provide spatial and tabular data through data services built on the fantastic Koordinates platform. The challenge arises when trying to import this data into R, as it involves several steps:\n\nAdd the dataset to your cart\nCreate an export\nWait for file to finish processing\nDownload the file to your computer\nOpen R\nNavigate to the file path of the downloaded folder (e.g., in read_csv() or read_sf())\nFinally, read the file into R.\n\nBy utilising an API, we can bypass many of these steps and read a dataset directly into R. Additionally, using an API provides the benefit of accessing the most up-to-date data, facilitating collaboration, and using version control without the need to share data files."
  },
  {
    "objectID": "posts/koordinatr/index.html#koordinatr",
    "href": "posts/koordinatr/index.html#koordinatr",
    "title": "Koordinates API for R",
    "section": "2 Koordinatr",
    "text": "2 Koordinatr\nI have developed a package that simplifies this process. It only works for tabular and vector spatial data for now (a function for rasters has not been implemented yet). However, it has been a time-saver for me in my work with these data.\n\n\n\n\n\n\nWarning\n\n\n\nNote: This package is still experimental, and changes may occur in the future. The arguments might change, or the whole thing might break. Use at your own risk.\n\n\n\n2.1 Setup\n\n2.1.1 Installation\nThe package is not yet available on CRAN, so it can be installed from GitHub:\n# install.packages(\"devtools\")\ndevtools::install_github(\"isaacbain/koordinatr\")\n\n\n2.1.2 Authentication\nYou will need an API key to access the data. This can be obtained by signing up on the Koordinates platform and creating a new API key.\napi_key &lt;- \"your_api_key\"\n\n\n\n2.2 Usage\nThe package has two primary functions: get_table_as_tibble() and get_table_as_sf(). The former is for tabular data, while the latter is for spatial data.\nBoth functions share the same arguments:\n\napi_key - Your Koordinates API key.\nagency - The agency providing the data. Should be one of ‚Äúlinz‚Äù, ‚Äústatsnz‚Äù, ‚Äúmfe‚Äù. Or ‚Äúcustom‚Äù if you want to manually specify the URL for the service.\nid - The ID of the dataset you want to access.\ncustom_url - If you set agency = \"custom\", you can specify the URL of the service here."
  },
  {
    "objectID": "posts/koordinatr/index.html#example",
    "href": "posts/koordinatr/index.html#example",
    "title": "Koordinates API for R",
    "section": "3 Example",
    "text": "3 Example\nLet‚Äôs demonstrate its use by fetching a table of greenhouse gas concentrations from the Baring Head Atmospheric Research Station, from the Ministry for the Environment data service. Using the Koordinatr package, we can directly read this data into R without manual downloading.\n\n# libraries\nlibrary(koordinatr)\nlibrary(tidyverse)\nlibrary(gganimate)\n\n# import data\nall_gases_raw &lt;- get_table_as_tibble(\n  api_key = api_key, # set your own api key\n  agency = \"mfe\", # set the agency\n  id = \"115974\" # get the ID from the URL of the dataset\n)\n\nIt was as easy as that! (hopefully).\nNow, let‚Äôs create a basic plot (Figure¬†1) using this data to check it has worked properly.\n\n# filtering\nco2 &lt;- all_gases_raw |&gt;\n  select(-gml_id) |&gt; # don't need this column\n  filter(parameter == \"trend\", variable == \"carbon_dioxide\") |&gt; # can select raw data points, seasonally adjusted, or the trend\n  mutate(date = make_date(year = year, month = month, day = 1)) # turn columns into a proper date\n\nall_gases &lt;- all_gases_raw |&gt;\n  select(-gml_id) |&gt;\n  filter(parameter == \"mean_fitted\") |&gt;\n  mutate(date = make_date(year = year, month = month, day = 1))\n\nggplot(data = all_gases, aes(x = date, y = value)) +\n  geom_point(size = 0.01) +\n  geom_smooth(method = \"lm\") +\n  facet_wrap(~variable, scales = \"free_y\") +\n  theme_minimal() +\n  labs(\n    x = \"Date\",\n    y = \"Concentration (ppm)\",\n    title = \"Greenhouse gas concentrations\",\n    subtitle = \"Baring Head, 1972‚Äî2022\"\n  )\n\n\n\n\n\n\n\nFigure¬†1: Concentration of carbon dioxide, methane, and nitrous oxide gases at Baring Head. Starting at 1972, 1990, and 1996, respectively.\n\n\n\n\n\nAnd how about an animated plot?\n\n\nShow the code\n# Define the exact breaks for the x-axis\nbreaks &lt;- seq.Date(from = as.Date(\"1970-01-01\"), to = as.Date(\"2022-01-01\"), by = \"5 years\")\n\n# Custom labelling function\nppm_label &lt;- function(x) {\n  paste0(x, \" ppm\")\n}\n\np &lt;- ggplot(co2, aes(x = date, y = value, colour = value)) +\n  geom_line(linewidth = 0.75) +\n  geom_point(aes(colour = value), size = 2) +\n  scale_colour_gradient(low = \"#1f78b4\", high = \"#e31a1c\") +\n  transition_reveal(date) +\n  expand_limits(y = c(325, 425)) +\n  theme_minimal() +\n  scale_y_continuous(labels = ppm_label) +\n  labs(\n    x = \"\",\n    y = bquote(CO[2]),\n    title = \"Carbon dioxide concentration at Baring Head, 1972‚Äì2022\",\n    subtitle = \"Date: {frame_along}\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(t = 10, r = 10, b = 30, l = 10),\n    panel.grid.major = element_blank(), # Remove major gridlines\n    panel.grid.minor = element_blank(), # Remove minor gridlines\n    plot.title = element_text(size = 15, face = \"bold\", colour = \"darkslateblue\"),\n    plot.subtitle = element_text(size = 10)\n  ) +\n  geom_text(aes(label = round(value, 0), y = value), hjust = 0.5, vjust = -1, size = 5) +\n  view_follow(fixed_y = TRUE) +\n  scale_x_date(breaks = breaks, date_labels = \"%Y\", limits = range(co2$date))\n\nanimate(p,\n  nframes = 400,\n  fps = 30,\n  start_pause = 0,\n  end_pause = 60\n)\n\n\n\n\n\n\n\n\nFigure¬†2: Animated plot of carbon dioxide concentrations at Baring Head, 1972‚Äî2022."
  },
  {
    "objectID": "posts/koordinatr/index.html#conclusion",
    "href": "posts/koordinatr/index.html#conclusion",
    "title": "Koordinates API for R",
    "section": "4 Conclusion",
    "text": "4 Conclusion\nAnd that‚Äôs it! You‚Äôve now got a basic understanding of how to use the Koordinatr package to access data from the Koordinates API. These data services are a treasure trove of environmental information, so I encourage you to explore them and discover what could be applicable to your own work."
  },
  {
    "objectID": "posts/koordinatr/index.html#footnotes",
    "href": "posts/koordinatr/index.html#footnotes",
    "title": "Koordinates API for R",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nMinistry for the Environment data service. Statistics New Zealand geographic data service. Land Information New Zealand data service. Manaaki Whenua Landcare Research LRIS portal. Civil Deference NationalMap data service. Kapiti Coast District Council GIS Open Data. Scion Research data service. Resilience National Science Challenge NZ Coastlines data service. Waikato District Council data service.‚Ü©Ô∏é"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi there! I‚Äôm a quantitative ecologist who loves working in environmental resource management. I dive into all sorts of tasks, from analysing raw data and generating insights, to developing policies, advising decision-makers, and building tools to help with implementation. I‚Äôm all about using open-source tools like R and making sure my analyses are reproducible.\nI call ≈åtautahi (Christchurch) home‚Äîa lovely little city. When I‚Äôm not working, you‚Äôll likely find me packrafting, paragliding, bikepacking, or sea kayaking.\nMost of my work focuses on freshwater ecosystems, but I‚Äôm also interested in how environmental health affects human health. I spend a lot of time at the intersection of science and policy, trying to bridge the gap between research and real-world applications.\nOn top of all that, I‚Äôm also a PhD candidate in Public Health at the University of Otago, continuing to learn and contribute to a new field."
  }
]