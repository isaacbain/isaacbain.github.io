{
  "hash": "34ce4f45d8be2a789c96f354781bba37",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Draining the Cook Strait\"\nauthor: \"Isaac Bain\"\ndate: \"2024-08-13\"\ncategories: [code, maps, animation, bathymetry]\nexecute:\n  warning: false\n  error: false\n  messages: false\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n    toc: true\n    toc-location: left\n    number-sections: true\n    link-external-icon: true\n    link-external-newwindow: true\neditor: visual\nlightbox: auto\ndraft: false\ndraft-mode: unlinked\ntitle-block-banner: \"#00000000\"\ntitle-block-banner-color: \"rgba(255, 255, 255, 0.9)\"\ninclude-in-header:\n  - text: |\n      <style>\n      #title-block-header.quarto-title-block.default .quarto-title-meta {\n        color: rgba(255, 255, 255, 0.9);\n      }\n      .quarto-title-block .quarto-title-banner {\n        height: 0; /* hide */\n      }\n      #title-block-header {\n        background: \n          /* top, transparent black, faked with gradient */\n          linear-gradient(\n            rgba(0, 0, 0, 0.2),\n            rgba(0, 0, 0, 0.6)\n          ),\n          /* bottom, image */ \n          url(./cook-strait-photo.png);\n        background-size: cover;\n        background-position-y: center;\n        height: 300px;\n        opacity: 0.7; /* image opacity, lower means lighter */\n        z-index: -1;\n      }\n      </style>\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# libraries ---------------------------------------------------------------\nlibrary(rayshader) \nlibrary(rayvista)\nlibrary(sf)\nlibrary(terra)\nlibrary(gifski)\n\n# pre-processing ----------------------------------------------------------\n\nr <- rast(\"data/GEBCO_10_Aug_2024_8ceb2074bd31/gebco_2024_n-40.5121_s-42.294_w173.4459_e175.7843.tif\")\n\n# Reproject the raster to NZTM2000 (EPSG:2193)\nr <- project(r, \"EPSG:2193\")\n\n# Convert to a matrix suitable for rayshader\nelevation_matrix <- raster_to_matrix(r)\n\n# rayshader ---------------------------------------------------------------\n\n# Create rayshader plot\nelevation_matrix |> \n  sphere_shade(texture = \"imhof1\", sunangle = 45) |> # creates colour gradient\n  add_shadow(ray_shade(elevation_matrix), 0.5) |> # adds shadow\n  add_shadow(ambient_shade(elevation_matrix), 0) |> # adds ambient light (looks nice but very slow)\n  plot_3d(elevation_matrix,\n          zscale = 100,\n          water = TRUE,\n          wateralpha = 0.5,\n          watercolor = \"#4F42B5\",\n          waterlinecolor = NULL,\n          waterdepth = 0,\n          windowsize = c(1300, 1000),\n          zoom = 0.7\n          )\n\n# animate -----------------------------------------------------------------\n\n# Function to create each frame with varying water depth\ncreate_frame <- function(waterdepth) {\n  elevation_matrix |> \n    sphere_shade(texture = \"imhof1\", sunangle = 45) |> # creates colour gradient\n    add_shadow(ray_shade(elevation_matrix), 0.5) |> # adds shadow\n    add_shadow(ambient_shade(elevation_matrix, multicore = TRUE), 0) |> # adds ambient light (looks nice but very slow)\n    plot_3d(elevation_matrix,\n            zscale = 100,\n            water = TRUE,\n            wateralpha = 0.5,\n            watercolor = \"#4F42B5\",\n            waterlinecolor = NULL,\n            waterdepth = waterdepth,\n            windowsize = c(1300, 1000),\n            zoom = 0.7\n    )\n  \n  # Save the current frame\n  render_snapshot(paste0(\"frames/frame_\", sprintf(\"%03d\", abs(waterdepth)), \".png\"))\n}\n\n# Create frames for depths from 0 to -1000 in steps of -50\ndepths <- seq(0, -270, by = -2)\nlapply(depths, create_frame)\n\n# Combine frames into a GIF\ngifski(png_files = sprintf(\"frames/frame_%03d.png\", abs(depths)), gif_file = \"water_depth_animation.gif\", delay = 0.08)\n\n# Or combine frames into a video\nav::av_encode_video(input = sprintf(\"frames/frame_%03d.png\", abs(depths)), output = \"water_depth_animation.mp4\", framerate = 10)\n\n# Clean up: remove individual frame files after creating the animation\n# file.remove(sprintf(\"frames/frame_%03d.png\", abs(depths)))\n\n# scenario 1 --------------------------------------------------------------\n\n# Create rayshader plot\nelevation_matrix |> \n  sphere_shade(texture = \"imhof1\", sunangle = 45) |> # creates colour gradient\n  add_shadow(ray_shade(elevation_matrix), 0.5) |> # adds shadow\n  add_shadow(ambient_shade(elevation_matrix, multicore = TRUE), 0) |> # adds ambient light (looks nice but very slow)\n  plot_3d(elevation_matrix,\n          zscale = 100,\n          water = TRUE,\n          wateralpha = 0.5,\n          watercolor = \"#4F42B5\",\n          waterlinecolor = NULL,\n          waterdepth = -140,\n          windowsize = c(1300, 1000),\n          zoom = 0.7,\n          phi = 89.9,\n          theta = -0.7\n  )\n\nrender_snapshot(\"scenario_1.png\")\n\n# scenario 2 --------------------------------------------------------------\n\n# Create rayshader plot\nelevation_matrix |> \n  sphere_shade(texture = \"imhof1\", sunangle = 45) |> # creates colour gradient\n  add_shadow(ray_shade(elevation_matrix), 0.5) |> # adds shadow\n  add_shadow(ambient_shade(elevation_matrix, multicore = TRUE), 0) |> # adds ambient light (looks nice but very slow)\n  plot_3d(elevation_matrix,\n          zscale = 100,\n          water = TRUE,\n          wateralpha = 0.5,\n          watercolor = \"#4F42B5\",\n          waterlinecolor = NULL,\n          waterdepth = -200,\n          windowsize = c(1300, 1000),\n          zoom = 0.7,\n          phi = 89.9,\n          theta = -0.7\n  )\n\nrender_snapshot(\"scenario_2.png\")\n```\n:::\n\n\n\n## Introduction\n\nWith the Aratere ferry once again playing bumper boats during docking, and the dream of a bridge or tunnel across the Cook Strait sinking faster than a lead balloon, it’s clear we need a new approach. So, let’s toss conventional wisdom overboard and consider something truly bold: draining the Cook Strait to create a land route between the North and South Islands.\n\nYes, you read that right.\n\n![Animation showing the water level in the Cook Strait area reducing from 0 to -270m below current sea level. Built using GEBCO 2024 bathymetric data.](water_depth_animation.gif){#fig-animation}\n\n## Extending SH1\n\n**Scenic Route: Paraparaumu to Nelson**\n\nArmed with some bathymetric data and a healthy dose of dystopian satire, I've mapped out the potential routes for our new inter-island highway. The first scenario, perfect for those who love a scenic drive, proposes draining a moderate depth of water to establish a route between Paraparaumu and Nelson. It’s a bit longer, sure, but think of the coastal views!\n\n![Map showing the water level 140m below current levels in the Cook Strait area. Built using GEBCO 2024 bathymetric data.](scenario_1_labeled.png){#fig-scenario-1 width=\"600\"}\n\n**Speedy Shortcut: Wellington to Blenheim**\n\nAlternatively, if you're in a hurry to get from Wellington to Blenheim, we can opt to drain a greater depth of water for a more direct route. Picture it: a swift, straight drive through what was once ocean. Just watch out for the occasional leftover fish.\n\n![Map showing the water level 200m below current levels in the Cook Strait area. Built using GEBCO 2024 bathymetric data.](scenario_2_labeled.png){#fig-scenario-2 width=\"600\"}\n\n## Beyond Cook Strait\n\nOf course, this raises the question: where else should we drain next? Perhaps a road trip to the Chatham Islands is in order? Imagine cruising along the ocean floor, past ancient shipwrecks and submerged ecosystems, all the way to your holiday destination.\n\nIn a world of endless possibilities—and an endless supply of satire—draining the Cook Strait might just be the wacky, out-of-the-box solution we've been searching for. So, what do you think? Time to roll up our sleeves and start digging?\n\n*Disclaimer: no oceans were harmed in the making of this blog post.*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}