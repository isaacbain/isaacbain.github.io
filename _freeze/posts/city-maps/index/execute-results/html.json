{
  "hash": "3d3e7d01239763581b84219857a6d0f1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"City maps of the 150 largest urban areas in NZ\"\nauthor: \"Isaac Bain\"\ndate: \"2024-08-27\"\ncategories: [code, maps, population]\nexecute:\n  warning: false\n  error: false\n  messages: false\nformat: \n  html:\n    code-fold: true\n    code-summary: \"Show the code\"\n    toc: true\n    toc-location: left\n    number-sections: true\n    link-external-icon: true\n    link-external-newwindow: true\neditor: visual\nlightbox: auto\ndraft: false\ndraft-mode: unlinked\ntitle-block-banner: \"#00000000\"\ntitle-block-banner-color: \"rgba(255, 255, 255, 0.9)\"\ninclude-in-header:\n  - text: |\n      <style>\n      #title-block-header.quarto-title-block.default .quarto-title-meta {\n        color: rgba(255, 255, 255, 0.9);\n      }\n      .quarto-title-block .quarto-title-banner {\n        height: 0; /* hide */\n      }\n      #title-block-header {\n        background: \n          /* top, transparent black, faked with gradient */\n          linear-gradient(\n            rgba(0, 0, 0, 0.6),\n            rgba(0, 0, 0, 0.2)\n          ),\n          /* bottom, image */ \n          url(./chch.jpg);\n        background-size: cover;\n        background-position-y: center;\n        height: 300px;\n        opacity: 0.7; /* image opacity, lower means lighter */\n        z-index: -1;\n      }\n      </style>\n---\n\n\n\n## Introduction\n\nCity maps in a particular minimalist style have become quite trendy recently. You’ve probably seen them all over the internet, with sellers on platforms like [Etsy](https://www.etsy.com/nz/search?q=city%20map&ref=search_bar) charging anywhere from \\$5 to \\$20 for a digital download, and even more for printed versions.\n\nBut here’s a little secret… they’re **super** easy to create in R.\n\nThere’s an R package called `rcityviews` that allows you to make these maps with just one line of code:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nrcityviews::cityview(\"Christchurch\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=1889.76}\n:::\n:::\n\n\n\nPretty cool, right? But it doesn’t stop there. The `rcityviews` package offers a range of themes and border [options](https://github.com/koenderks/rcityviews). And if coding isn’t your thing, the package author has even provided a [ShinyApp](https://koenderks.shinyapps.io/rcityviews/) that lets you create custom maps for cities all over the world without writing a single line of R code.\n\n## New Zealand urban areas\n\nTo show you just how easy these are to create, I wrote a small for loop that iterates over the names and locations of New Zealand’s [150 largest urban areas](https://en.wikipedia.org/wiki/List_of_New_Zealand_urban_areas_by_population) to generate maps for each one. The process is highly efficient and requires minimal effort once the loop is set up. With just a few lines of code, you can create a comprehensive collection of maps that visually capture the essence of these diverse urban landscapes. This method not only saves time but also allows for consistent styling across all maps, ensuring that each map adheres to the same aesthetic standards.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rcityviews)\nlibrary(sf)\nlibrary(dplyr)\n\n# read cities\ncities <- st_read(\"posts/city-maps/cities.shp\") |>\n  mutate(\n    Longitude = st_coordinates(geometry)[, 1],\n    Latitude = st_coordinates(geometry)[, 2]\n  ) |> \n  st_drop_geometry() |>\n  dplyr::arrange(desc(Population))\n\nmyTheme <- list(\n  colors = list(\n    background = \"#ffffff\",\n    water = \"#9ddffb\",\n    landuse = c(\"#f2f4cb\", \"#d0f1bf\", \"#64b96a\"),\n    contours = \"#eeefc9\",\n    streets = \"#2f3737\",\n    rails = c(\"#2f3737\", \"#eeefc9\"),\n    buildings = c(\"#8e76a4\", \"#a193b1\", \"#db9b33\", \"#e8c51e\", \"#ed6c2e\"),\n    text = \"#2f3737\",\n    waterlines = \"#9ddffb\"\n  ),\n  font = list(\n    \"family\" = \"Imbue\",\n    \"face\" = \"plain\",\n    \"scale\" = 3,\n    append = \"\\u2014\"\n  ),\n  size = list(\n    borders = list(\n      contours = 0.15,\n      water = 0.4,\n      canal = 0.5,\n      river = 0.6\n    ),\n    streets = list(\n      path = 0.2,\n      residential = 0.3,\n      structure = 0.35,\n      tertiary = 0.4,\n      secondary = 0.5,\n      primary = 0.6,\n      motorway = 0.8,\n      rails = 0.65,\n      runway = 3\n    )\n  )\n)\n\n# do one individually\n\n# city <- new_city(name = \"Hokitika\", country = \"New Zealand\", lat = -42.717507, long = 170.973959)\n# \n# p <- cityview(name = city, license = FALSE, border = \"circle\", theme = myTheme)\n# \n# ggplot2::ggsave(filename = \"posts/city-maps/output/Hokitika.jpg\",\n#                 plot = p,\n#                 height = 500,\n#                 width = 500,\n#                 units = \"mm\",\n#                 dpi = 300)\n\n\n# Loop through each city in the data frame\nfor (i in 111:nrow(cities)) {\n  \n  # Extract city details\n  city_name <- cities$Urban.Area[i]\n  city_lat <- cities$Latitude[i]\n  city_long <- cities$Longitude[i]\n  \n  # Create a new city object\n  city <- new_city(name = city_name, country = \"New Zealand\", lat = city_lat, long = city_long)\n  \n  # Generate a filename for the output\n  output_filename <- paste0(\"posts/city-maps/output/\", city_name, \".jpg\")\n  \n  # Produce the cityview\n  p <- cityview(name = city, license = FALSE, border = \"circle\", \n                theme = myTheme) # replace myTheme with \"vintage\" or another\n  \n  ggplot2::ggsave(filename = output_filename,\n                  plot = p,\n                  height = 500,\n                  width = 500,\n                  units = \"mm\",\n                  dpi = 300)\n}\n```\n:::\n\n\n\nYou can download[^1] high resolution versions from this [repo](https://github.com/isaacbain/nz-city-maps/tree/main/maps).  I hope your town or city is among them!\n\n[^1]: Feel free to print these, share them, or use them as you please. Just maybe don’t start selling them without asking me first.\n\nHere are a few of my favourites:\n\n:::{.column-page-inset}\n\n\n\n```{=html}\n<div style=\"display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px;\">\n  <div><img src=\"thumbnails/Bluff.jpg\" alt=\"Bluff\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Kaikōura.jpg\" alt=\"Kaikōura\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Timaru.jpg\" alt=\"Timaru\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Christchurch.jpg\" alt=\"Christchurch\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Wellington.jpg\" alt=\"Wellington\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Hamilton.jpg\" alt=\"Hamilton\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Rotorua.jpg\" alt=\"Rotorua\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Pukekohe.jpg\" alt=\"Pukekohe\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Havelock North.jpg\" alt=\"Havelock North\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Lincoln.jpg\" alt=\"Lincoln\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Huntly.jpg\" alt=\"Huntly\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Picton.jpg\" alt=\"Picton\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Balclutha.jpg\" alt=\"Balclutha\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Lyttelton.jpg\" alt=\"Lyttelton\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Edgecumbe.jpg\" alt=\"Edgecumbe\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Blenheim.jpg\" alt=\"Blenheim\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Dunedin.jpg\" alt=\"Dunedin\" style=\"width: 100%;\"></div>\n  <div><img src=\"thumbnails/Auckland.jpg\" alt=\"Auckland\" style=\"width: 100%;\"></div>\n</div>\n```\n\n\n\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}